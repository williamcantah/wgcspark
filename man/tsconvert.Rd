% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tsconvert.R
\name{tsconvert}
\alias{tsconvert}
\title{Convert Data Frame Columns to Time Series with Date Column}
\usage{
tsconvert(df, start, period = "annual")
}
\arguments{
\item{df}{A data frame containing the data to be converted.}

\item{start}{The start time for the time series. For annual series use a single
numeric year (e.g. 2010). For monthly and quarterly series, use a vector of the
form \code{c(year, period)} (e.g. \code{c(2010, 1)} for January 2010 or Q1 of 2010).}

\item{period}{A character string indicating the frequency of the time series.
One of \code{"annual"}, \code{"quarterly"}, or \code{"monthly"}. Default is
\code{"annual"}.}
}
\value{
A data frame in which every numeric column is converted to a time series
  (\code{ts}) object and a new column named \code{Time} contains Date objects marking
  the start of each observation period.
}
\description{
This function converts each numeric column in a data frame into a time series
object using the base R \code{ts} function. In addition, it adds a time variable as
a Date vector reflecting the frequency of the data (annual, quarterly, or monthly)
using a calendar start date.
}
\details{
The function maps the selected period to a numeric frequency required by \code{ts}:

\itemize{
  \item \code{"annual"}: \code{frequency = 1}.
  \item \code{"quarterly"}: \code{frequency = 4}.
  \item \code{"monthly"}: \code{frequency = 12}.
}

A helper function calculates the starting Date given the input \code{start} and \code{period}.
The date sequence is generated by \code{\link{seq.Date}}, with the interval set to one year,
three months, or one month, accordingly.
}
\examples{
# Example: Converting a data frame with monthly data
df <- data.frame(
  sales = c(100, 150, 200, 250),
  profit = c(50, 60, 70, 80),
  category = c("A", "B", "A", "C")
)

# Convert numeric columns to time series with a monthly frequency starting in January 2020
monthly_df <- tsconvert(df, start = c(2020, 1), period = "monthly")

# Inspect the structure. 'sales' and 'profit' are now ts objects,
# and a 'Time' column with calendar dates has been added.
str(monthly_df)

# Example: Converting to an annual time series starting in 2010
annual_df <- tsconvert(df, start = 2010, period = "annual")
head(annual_df$Time)

}
